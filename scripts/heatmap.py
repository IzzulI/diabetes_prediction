# -*- coding: utf-8 -*-
"""heatmap

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C8IsBX3COqOWWLWpJQK2AnFmMwLCgw0P
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def heatmap(df: pd.DataFrame) -> None:
  """
  Generates a Spearman correlation heatmap for all numerical columns in the DataFrame.
  """
  cols = df.columns

  # Compute the Spearman correlation matrix
  spearman_corr_matrix = df[cols].corr(method='spearman')

  # Generate the heatmap
  plt.figure(figsize=(12, 10))
  sns.heatmap(spearman_corr_matrix, annot=True, fmt=".2f", cmap='coolwarm', cbar=True)
  plt.title('Spearman Correlation Matrix of Numerical Features')
  plt.xticks(rotation=90)

  # Save and display the heatmap
  plt.savefig('heatmap.png')

def feature_selection(df: pd.DataFrame, target_column='readmission_in_30days') -> pd.DataFrame:
  """
  Feature selection based on Spearman correlation.
  Variables correlated with target more than 0.009 or less than -0.009 are selected.
  """
  cols = df.columns

  spearman_corr_matrix = df[cols].corr(method='spearman')

  # Select the last row to check
  last_row = spearman_corr_matrix.iloc[-1]

  # Sort the values of the last row
  sorted_last_row = last_row.sort_values(ascending=False)
  sorted_last_row = sorted_last_row[1:]

  # Filter the features based on threshold
  sorted_last_row = sorted_last_row[(sorted_last_row > 0.009) | (sorted_last_row < -0.009)]
  df_ready2 = df[sorted_last_row.index].copy()

  # Add the target column back
  df_ready2.loc[:, target_column] = df[target_column]


  return df_ready2

if __name__ == "__main__":
    path = "data/transformed_diabetic_data.csv"
    df = pd.read_csv(path)

    target_column = 'readmission_in_30days'  # Specify the name of the target column

    # Generate heatmap
    heatmap(df)

    # Perform feature selection
    df = feature_selection(df, target_column)
    